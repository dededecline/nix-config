{ pkgs, lib, user, ... }: {
  programs.git = {
    enable = true;
    userName = user.githubUsername;
    userEmail = ""; # Will be populated by 1Password
    extraConfig = {
      credential = {
        credentialStore = "cache";
        helper = "manager";
        "https://github.com".username = user.githubUsername;
      };
      core = {
        editor = "cursor";
        autocrlf = false;
      };
      init.defaultBranch = "main";
      pull.rebase = true;
      rebase.autostash = true;
      include.path = "~/.gitconfig.user";
    };
  };

  home.activation = {
    fetchEmailFrom1Password = let
      op = "${pkgs._1password-cli}/bin/op";
    in lib.hm.dag.entryAfter ["writeBoundary"] ''
      # Check if gitconfig.user exists and has an email field with content
      if [ -f ~/.gitconfig.user ] && grep -E -q "email = .+" ~/.gitconfig.user; then
        # Email already exists, just make sure GitHub credentials are set
        if ! grep -q "credential \"https://github.com\"" ~/.gitconfig.user; then
          # Add GitHub credentials section
          echo "" >> ~/.gitconfig.user
          echo "[credential \"https://github.com\"]" >> ~/.gitconfig.user
          echo "    helper = manager" >> ~/.gitconfig.user
          echo "    username = ${user.githubUsername}" >> ~/.gitconfig.user
        fi
      else
        # No existing email, fetch from 1Password
        email=$(${op} item get "git-email" --fields email --reveal 2>/dev/null)
        if [ -n "$email" ]; then
          echo "[user]" > ~/.gitconfig.user
          echo "    name = ${user.name}" >> ~/.gitconfig.user
          echo "    email = $email" >> ~/.gitconfig.user
          echo "    username = ${user.githubUsername}" >> ~/.gitconfig.user
          
          # Configure GitHub authentication
          echo "[credential \"https://github.com\"]" >> ~/.gitconfig.user
          echo "    helper = manager" >> ~/.gitconfig.user
          echo "    username = ${user.githubUsername}" >> ~/.gitconfig.user
        fi
      fi
    '';
  };
} 